package dev.w1zzrd.packets.network

enum class DatagramProtocol {
    HOPOPT,
    ICMP,
    IGMP,
    GGP,
    IP_in_IP,
    ST,
    TCP,
    CBT,
    EGP,
    IGP,
    BBN_RCC_MON,
    NVP_II,
    PUP,
    ARGUS,
    EMCON,
    XNET,
    CHAOS,
    UDP,
    MUX,
    DCN_MEAS,
    HMP,
    PRM,
    XNS_IDP,
    TRUNK_1,
    TRUNK_2,
    LEAF_1,
    LEAF_2,
    RDP,
    IRTP,
    ISO_TP4,
    NETBLT,
    MFE_NSP,
    MERIT_INP,
    DCCP,
    THIRD_PARTY,
    IDPR,
    XTP,
    DDP,
    IDPR_CMTP,
    TPPP,
    IL,
    IPv6,
    SDRP,
    IPv6_Route,
    IPv6_Frag,
    IDRP,
    RSVP,
    GREs,
    DSR,
    BNA,
    ESP,
    AH,
    I_NLSP,
    SwIPe,
    NARP,
    MOBILE,
    TLSP,
    SKIP,
    IPv6_ICMP,
    IPv6_NoNxt,
    IPv6_Opts,
    ANY_INTERNAL,
    CFTP,
    ANY_LOCAL,
    SAT_EXPAK,
    KRYPTOLAN,
    RVD,
    IPPC,
    ANY_DISTRIBUTED_FS,
    SAT_MON,
    VISA,
    IPCU,
    CPNX,
    CPHB,
    WSN,
    PVP,
    BR_SAT_MON,
    SUN_ND,
    WB_MON,
    WB_EXPAK,
    ISO_IP,
    VMTP,
    SECURE_VMTP,
    VINES,
    TTP,
    IPTM,
    NSFNET_IGP,
    DGP,
    TCF,
    EIGRP,
    OSPF,
    Sprite_RPC,
    LARP,
    MTP,
    AX_25,
    OS,
    MICP,
    SCC_SP,
    ETHERIP,
    ENCAP,
    ANY_PRIVATE_ENCRYPTION,
    GMTP,
    IFMP,
    PNNI,
    PIM,
    ARIS,
    SCPS,
    QNX,
    ACTIVE_NETWORKS,
    IPComp,
    SNP,
    Compaq_Peer,
    IPX_in_IP,
    VRRP,
    PGM,
    ANY_0_HOP,
    L2TP,
    DDX,
    IATP,
    STP,
    SRP,
    UTI,
    SMP,
    SM,
    PTP,
    IS_IS_OVER_IPv4,
    FIRE,
    CRTP,
    CRUDP,
    SSCOPMCE,
    IPLT,
    SPS,
    PIPE,
    SCTP,
    FC,
    RSVP_E2E_IGNORE,
    Mobility_Header,
    UDPLite,
    MPLS_in_IP,
    manet,
    HIP,
    Shim6,
    WESP,
    ROHC,
    Ethernet,

    Unassigned,
    Experimentation,
    Reserved;

    companion object {
        fun UByte.toDatagramProtocol() =
                when(this.toUInt() and 0xFFu) {
                    in 0x90u until 0xFDu -> Unassigned
                    in 0xFDu until 0xFFu -> Experimentation
                    0xFFu -> Reserved
                    else -> values()[this.toInt() and 0xFF]
                }
    }
}